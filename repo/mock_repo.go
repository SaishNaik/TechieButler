// Code generated by MockGen. DO NOT EDIT.
// Source: repo.go

// Package repo is a generated GoMock package.
package repo

import (
	reflect "reflect"
	models "techiebutler/models"

	gomock "github.com/golang/mock/gomock"
)

// MockIRepo is a mock of IRepo interface.
type MockIRepo struct {
	ctrl     *gomock.Controller
	recorder *MockIRepoMockRecorder
}

// MockIRepoMockRecorder is the mock recorder for MockIRepo.
type MockIRepoMockRecorder struct {
	mock *MockIRepo
}

// NewMockIRepo creates a new mock instance.
func NewMockIRepo(ctrl *gomock.Controller) *MockIRepo {
	mock := &MockIRepo{ctrl: ctrl}
	mock.recorder = &MockIRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIRepo) EXPECT() *MockIRepoMockRecorder {
	return m.recorder
}

// CreateEmployee mocks base method.
func (m *MockIRepo) CreateEmployee(emp *models.Employee) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateEmployee", emp)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateEmployee indicates an expected call of CreateEmployee.
func (mr *MockIRepoMockRecorder) CreateEmployee(emp interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateEmployee", reflect.TypeOf((*MockIRepo)(nil).CreateEmployee), emp)
}

// DeleteEmployee mocks base method.
func (m *MockIRepo) DeleteEmployee(id int) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteEmployee", id)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteEmployee indicates an expected call of DeleteEmployee.
func (mr *MockIRepoMockRecorder) DeleteEmployee(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteEmployee", reflect.TypeOf((*MockIRepo)(nil).DeleteEmployee), id)
}

// GetEmployeeByID mocks base method.
func (m *MockIRepo) GetEmployeeByID(id int) (*models.Employee, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetEmployeeByID", id)
	ret0, _ := ret[0].(*models.Employee)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetEmployeeByID indicates an expected call of GetEmployeeByID.
func (mr *MockIRepoMockRecorder) GetEmployeeByID(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetEmployeeByID", reflect.TypeOf((*MockIRepo)(nil).GetEmployeeByID), id)
}

// UpdateEmployee mocks base method.
func (m *MockIRepo) UpdateEmployee(id int, emp *models.Employee) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateEmployee", id, emp)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateEmployee indicates an expected call of UpdateEmployee.
func (mr *MockIRepoMockRecorder) UpdateEmployee(id, emp interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateEmployee", reflect.TypeOf((*MockIRepo)(nil).UpdateEmployee), id, emp)
}
